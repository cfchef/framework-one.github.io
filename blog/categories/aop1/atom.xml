<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Aop1 | FW/1 - The Invisible Framework]]></title>
  <link href="http://framework-one.github.io/blog/categories/aop1/atom.xml" rel="self"/>
  <link href="http://framework-one.github.io/"/>
  <updated>2016-06-16T14:42:42-07:00</updated>
  <id>http://framework-one.github.io/</id>
  <author>
    <name><![CDATA[Sean Corfield]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FW/1 4.0.0 Alpha 1]]></title>
    <link href="http://framework-one.github.io/blog/2016/03/05/fw1-4-0-0-alpha-1/"/>
    <updated>2016-03-05T17:00:00-08:00</updated>
    <id>http://framework-one.github.io/blog/2016/03/05/fw1-4-0-0-alpha-1</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/framework-one/fw1/releases/tag/v4.0.0-alpha1">FW/1 4.0.0 Alpha 1</a> is available. At this point FW/1 4.0.0 is feature complete – there may be a few very minor changes between now and the Beta, and then only bug fixes through the RC phase. We’ve been using this <strong>develop</strong> version in production at work all along so I consider it solid enough for serious work.<!-- more --></p>

<p>The focus of the 4.0 release is on improving REST support. Improvements include:</p>

<ul>
  <li>JSON-encoded POST body support.</li>
  <li>Controllers have easy access to HTTP headers.</li>
  <li>Builder syntax for <code>renderData()</code> result elements.</li>
  <li>Support for user-supplied rendering functions.</li>
  <li>Integrated support for HTTP <code>OPTIONS</code> verb.</li>
  <li>Per-resource error handling.</li>
  <li>Setting status text (in addition to status code) in HTTP responses.</li>
  <li>Wildcard HTTP method support.</li>
</ul>

<p>In addition, DI/1 has had a number of enhancements, including the addition of a builder syntax for programmatically declaring beans.</p>

<p>For more detail, read the <a href="http://framework-one.github.io/documentation/4.0/changes.html">Change Log for FW/1 4.0</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FW/1 4.0 and Beyond]]></title>
    <link href="http://framework-one.github.io/blog/2016/01/05/fw1-4-0-and-beyond/"/>
    <updated>2016-01-05T22:20:00-08:00</updated>
    <id>http://framework-one.github.io/blog/2016/01/05/fw1-4-0-and-beyond</id>
    <content type="html"><![CDATA[<p>Happy New Year and Welcome to 2016!</p>

<p>FW/1 3.5 has been out for a few months now and I want to talk about what’s coming this year.<!-- more -->
FW/1 4.0 is well under way and the themes are REST APIs and enhancements to DI/1. You can read <a href="http://framework-one.github.io/documentation/4.0/changes.html">the FW/1 4.0 change log</a> here to see how much has been done so far. There are <a href="https://github.com/framework-one/fw1/issues?q=is%3Aopen+is%3Aissue+milestone%3A4.0">only a few issues left for 4.0</a> so we’re close to the first Alpha release at this point.</p>

<p>Why the 4.0 version? A major version number change indicates breaking changes. 4.0 drops support for Adobe ColdFusion 9.0.x because it relies on closures. Frankly, I’d like to drop support for Adobe ColdFusion 10 so I could rely on using member functions, but I feel it’s important to support two major versions. Just bear in mind that Raijin – ColdFusion 2016 – is coming and when that’s released, I will drop support for ACF10!</p>

<p>Aside from the minimum version support, FW/1 4.0 includes a (potentially) breaking change around <code>property</code> declarations: if a <code>property</code> includes a type or default, it will no longer be considered for injection. In FW/1 3.5, typed properties could be excluded if you specified <code>omitTypedProperties : true</code>. That is the default in 4.0 so you can still restore the earlier behavior. In addition, 4.0 now ignores defaulted properties but you can specify <code>omitDefaultedProperties : false</code> to override that new behavior.</p>

<p>The next planned version of FW/1 will be 4.5 – a fairly major release that will pave the way for 5.0, in the same way 2.5 paved the way for 3.0. In 5.0, the request lifecycle methods will move from <code>Application.cfc</code> (or your custom CFC that extends <code>framework.one</code> in the <strong>Alternative Application Structure</strong>) to a separate CFC, and subsystems will also be able to specify a request lifecycle with a <code>subsystem.cfc</code> – and subsystems with such a CFC will be eagerly loaded at application startup (whereas subsystems are lazily loaded today). In order to provide a smooth upgrade path, FW/1 4.5 will support most of those features but disabled by default and will provide warnings or throw exceptions if the behavior would change in 5.0.</p>

<p>As always, I want FW/1 to be driven by your needs so please raise issues on the <a href="http://groups.google.com/group/framework-one/">mailing list</a> or on <a href="https://github.com/framework-one/fw1">GitHub</a> so that your voices are heard and can drive future versions of one of CFML’s most popular MVC/DI/AOP frameworks!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FW/1 3.5.0 Released!]]></title>
    <link href="http://framework-one.github.io/blog/2015/10/21/fw1-3-5-0-released/"/>
    <updated>2015-10-21T12:00:00-07:00</updated>
    <id>http://framework-one.github.io/blog/2015/10/21/fw1-3-5-0-released</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/framework-one/fw1/releases/tag/v3.5.0">Gold Release of FW/1 3.5.0</a> is available for general release and production use. The focus of this release is integration, bringing an improved way to add subsystems to an existing application, an easier way to add FW/1 to a legacy application, support for mixed CFML / Clojure applications, better support for WireBox, and full support for ForgeBox and CommandBox!<!-- more --></p>

<p>The major new features in FW/1 3.5.0 are:</p>

<ul>
  <li>Subsystems 2.0. A new, more streamlined way to add subsystems to an existing FW/1 application has been added. Thank you to <a href="https://github.com/sneiland">Steven Neiland</a> for the inspiration and guiding principles! Read about <a href="http://framework-one.github.io/documentation/using-subsystems.html">Subsystems 2.0</a> and how they differ from the older approach (which is still supported). The examples have been reworked to use Subsystems 2.0 so you can see how it works in practice.</li>
  <li>An <strong>Alternative Application Structure</strong> is now supported that allows you to create FW/1 applications that do not require <code>Application.cfc</code> extends the FW/1 component. Read about <a href="http://framework-one.github.io/documentation/developing-applications.html#alternative-application-structure">the Alternative Application Structure</a>. Some of the examples have been updated to use this approach so you can see how it works in practice.</li>
  <li>Clojure integration. If you have Leiningen installed (Clojure’s build tool) then it is very easy to write services and/or controllers in Clojure and have FW/1 automatically integrate those into your CFML application. Read about <a href="http://framework-one.github.io/documentation/cfml-and-clojure.html">mixing CFML &amp; Clojure</a> for more details. An example of Clojure integration is provided in the repository (you’ll need <a href="http://leiningen.org">Leiningen</a> installed for that example to run).</li>
  <li>ForgeBox / CommandBox support. FW/1 now has a <code>box.json</code> file and is hosted on ForgeBox so it can be easily installed via CommandBox.</li>
</ul>

<p>In addition to the major features, the following enhancements have been added:</p>

<ul>
  <li><code>redirect()</code> allows <code>queryString</code> to be a struct, like <code>buildURL()</code>.</li>
  <li><code>isFrameworkReloadRequest()</code> is now public in case an application needs to take action when the framework is reloaded.</li>
  <li><code>getSubsystemSectionAndItem()</code> added to supplement <code>getFullyQualifiedAction()</code> (the latter omits the subsystem if it is empty).</li>
  <li>The WireBox adapter now supports custom binders.</li>
  <li>The conventions used for various folder names can now be overridden in the framework configuration.</li>
</ul>

<p>And the following bugs have been fixed:</p>

<ul>
  <li><a href="https://github.com/framework-one/fw1/issues/377">377</a> - AOP/1 now allows a single interceptor to be applied to multiple objects.</li>
  <li><a href="https://github.com/framework-one/fw1/issues/361">361</a> - <code>renderData()</code> could kill sessions (this was backported to 3.1.1).</li>
  <li><a href="https://github.com/framework-one/fw1/issues/336">336</a> - account for <code>expandPath()</code> returning the wrong directory on ACF11 when the path has a trailing <code>/</code>.</li>
</ul>

<p>Finally, FW/1 includes experimental support for Lucee Language, so if you are running a prerelease build of Lucee Server that has Lucee Language support enabled, you can write controllers and views etc in <code>.lc</code> or <code>.lucee</code> files and FW/1 will use them.</p>

<p>You can read the <a href="https://github.com/framework-one/fw1/issues?q=is%3Aissue+milestone%3A3.5+is%3Aclosed">full list of changes since 3.1</a> on GitHub, along with
<a href="https://github.com/framework-one/fw1/pulls?q=is%3Apr+is%3Aclosed+milestone%3A3.5">accepted pull requests since 3.1</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FW/1 3.5.0 Release Candidate 2 Available!]]></title>
    <link href="http://framework-one.github.io/blog/2015/10/06/fw1-3-5-0-rc-2/"/>
    <updated>2015-10-06T15:40:00-07:00</updated>
    <id>http://framework-one.github.io/blog/2015/10/06/fw1-3-5-0-rc-2</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/framework-one/fw1/releases/tag/v3.5.0-rc2">second Release Candidate of FW/1 3.5.0</a> is available for testing.</p>

<p>This Release Candidate contains a few bug fixes discovered since Release Candidate 1 and is now the <a href="http://fw1.riaforge.org">default download from FW/1’s RIAForge page</a>.
I consider this stable enough to evaluate for production usage at this point – I expect this RC to be the Gold Release unless end user testing uncovers a showstopping issue in the next week or two!</p>

<p>You can read the <a href="https://github.com/framework-one/fw1/issues?q=is%3Aissue+milestone%3A3.5+is%3Aclosed">full list of changes since 3.1</a> on GitHub, along with
<a href="https://github.com/framework-one/fw1/pulls?q=is%3Apr+is%3Aclosed+milestone%3A3.5">accepted pull requests since 3.1</a>..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FW/1 3.5.0 Release Candidate 1 Available!]]></title>
    <link href="http://framework-one.github.io/blog/2015/09/22/fw1-3-5-0-rc-1/"/>
    <updated>2015-09-22T12:35:00-07:00</updated>
    <id>http://framework-one.github.io/blog/2015/09/22/fw1-3-5-0-rc-1</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/framework-one/fw1/releases/tag/v3.5.0-rc1">first Release Candidate of FW/1 3.5.0</a> is available for testing.</p>

<p>This Release Candidate contains just bug fixes since Beta 2. Beta 2 contained mostly bug fixes since Beta 1, with one small enhancement to DI/1 (<code>liberal</code> plural support, e.g., <code>libraries</code> becomes <code>library</code>).</p>

<p>You can read the <a href="https://github.com/framework-one/fw1/issues?q=is%3Aissue+milestone%3A3.5+is%3Aclosed">full list of changes since 3.1</a> on GitHub.</p>
]]></content>
  </entry>
  
</feed>
